{"ast":null,"code":"var _jsxFileName = \"/Users/danaattie/Capstone/FRONTEND/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [portfolio, setPortfolio] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  // const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n  const url = `http://127.0.0.1:5001`;\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(`${url}/api/portfolio`).then(response => response.json()).then(data => {\n        console.log(\"Fetched portfolio data:\", data);\n        setList(data); // Update the state with the fetched data\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n        // If there's an error, i set some error state and display it\n      });\n    }\n    fetchData();\n  }, []);\n  console.log(`got data ${list}`);\n  const [stockDetails, setStockDetails] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), list ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: JSON.stringify(list)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading portfolio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Stock: \", selectedStock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x/eKJSwQcUiMs8bK7D3flNQ8SNo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","portfolio","setPortfolio","total","setTotal","error","setError","list","setList","selectedStock","setSelectedStock","selectedInterval","setSelectedInterval","userId","url","fetchData","fetch","then","response","json","data","console","log","catch","stockDetails","setStockDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/danaattie/Capstone/FRONTEND/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [portfolio, setPortfolio] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  // const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n  const url = `http://127.0.0.1:5001`;\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(`${url}/api/portfolio`)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Fetched portfolio data:\", data);\n          setList(data); // Update the state with the fetched data\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n          // If there's an error, i set some error state and display it\n        });\n    }\n    fetchData();\n  }, []);\n\n  console.log(`got data ${list}`);\n  const [stockDetails, setStockDetails] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <h1>Welcome, {userId}</h1>\n\n      {list ? (\n        <>\n          {JSON.stringify(list)}\n          {/* <h2>Total Portfolio Value: ${list[\"total_value_of_portfolio\"]}</h2>\n          <div>\n            {Object.entries(list.portfolio).map(([symbol, stockInfo]) => (\n              <div key={symbol}>\n                <p>\n                  {symbol}: {stockInfo.num_stocks} stocks at $\n                  {stockInfo.last_close}\n                </p>\n                {/* <button onClick={() => handleStockSelection(symbol)}>\n                  Select\n                </button> \n              </div>\n            ))}\n          </div> */}\n        </>\n      ) : (\n        <p>Loading portfolio...</p>\n      )}\n      {selectedStock && (\n        <div>\n          <h3>Selected Stock: {selectedStock}</h3>\n          {/* <button onClick={() => handleIntervalChange(\"weekly\")}>Weekly</button>\n          <button onClick={() => handleIntervalChange(\"monthly\")}>\n            Monthly\n          </button> */}\n          {/* Add more interval buttons */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACjE,MAAMoB,MAAM,GAAG,OAAO;EACtB;EACA,MAAMC,GAAG,GAAI,uBAAsB;EAEnCpB,SAAS,CAAC,MAAM;IACd,eAAeqB,SAASA,CAAA,EAAG;MACzB,MAAMC,KAAK,CAAE,GAAEF,GAAI,gBAAe,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC;QAC5CZ,OAAO,CAACY,IAAI,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,CACDG,KAAK,CAAElB,KAAK,IAAK;QAChBgB,OAAO,CAAChB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF,CAAC,CAAC;IACN;IACAU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAAE,YAAWf,IAAK,EAAC,CAAC;EAC/B,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAEtD,oBACEG,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MAAQ8B,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACxCnC,OAAA;MAAA+B,QAAA,GAAI,WAAS,EAACd,MAAM;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEzBxB,IAAI,gBACHX,OAAA,CAAAE,SAAA;MAAA6B,QAAA,EACGK,IAAI,CAACC,SAAS,CAAC1B,IAAI;IAAC,gBAerB,CAAC,gBAEHX,OAAA;MAAA+B,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B,EACAtB,aAAa,iBACZb,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAA+B,QAAA,GAAI,kBAAgB,EAAClB,aAAa;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMrC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CApEQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}