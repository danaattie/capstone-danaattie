{"ast":null,"code":"var _jsxFileName = \"/Users/danaattie/Capstone/FRONTEND/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(\"Portfolio data:\", data);\n      setList(data); // Update the state with the fetched data\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, [url]); // Add a comma after 'url' in the dependency array\n\n  // Function to handle when a stock is selected\n  const handleStockSelection = stockSymbol => {\n    setSelectedStock(stockSymbol);\n    //\n  };\n\n  // Function to handle interval change\n  const handleIntervalChange = newInterval => {\n    setSelectedInterval(newInterval);\n    //\n  };\n  const fetchPortfolio = async () => {\n    //fetches the user's portfolio dictionary.\n    try {\n      const response = await fetch(`${backendUrl}/${user}/portfolio`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const portfolio = await response.json();\n      setPortfolio(portfolio);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n  const fetchPortfolioTotal = async () => {\n    //fetches the total value of the user's portfolio.\n    try {\n      const response = await fetch(`${backendUrl}/${user}/portfolio/total`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const total = await response.json();\n      setTotal(total);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), list ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Portfolio Value: $\", list.total_port_val]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(list.portfolio).map(([symbol, stockInfo]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [symbol, \": \", stockInfo.num_stocks, \" stocks at $\", stockInfo.last_close]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStockSelection(symbol),\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading portfolio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Stock: \", selectedStock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIntervalChange(\"weekly\"),\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIntervalChange(\"monthly\"),\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Aa2k1C/bek9cX5MFwraj7HeOxws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","list","setList","selectedStock","setSelectedStock","selectedInterval","setSelectedInterval","userId","url","fetch","then","response","json","data","console","log","catch","error","handleStockSelection","stockSymbol","handleIntervalChange","newInterval","fetchPortfolio","backendUrl","user","ok","Error","status","portfolio","setPortfolio","setError","fetchPortfolioTotal","total","setTotal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total_port_val","Object","entries","map","symbol","stockInfo","num_stocks","last_close","onClick","_c","$RefreshReg$"],"sources":["/Users/danaattie/Capstone/FRONTEND/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Portfolio data:\", data);\n        setList(data); // Update the state with the fetched data\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, [url]); // Add a comma after 'url' in the dependency array\n\n  // Function to handle when a stock is selected\n  const handleStockSelection = (stockSymbol) => {\n    setSelectedStock(stockSymbol);\n    //\n  };\n\n  // Function to handle interval change\n  const handleIntervalChange = (newInterval) => {\n    setSelectedInterval(newInterval);\n    //\n  };\n\n  const fetchPortfolio = async () => {\n    //fetches the user's portfolio dictionary.\n    try {\n      const response = await fetch(`${backendUrl}/${user}/portfolio`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const portfolio = await response.json();\n      setPortfolio(portfolio);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n\n  const fetchPortfolioTotal = async () => {\n    //fetches the total value of the user's portfolio.\n    try {\n      const response = await fetch(`${backendUrl}/${user}/portfolio/total`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const total = await response.json();\n      setTotal(total);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome, {userId}</h1>\n      {list ? (\n        <>\n          <h2>Total Portfolio Value: ${list.total_port_val}</h2>\n          <div>\n            {Object.entries(list.portfolio).map(([symbol, stockInfo]) => (\n              <div key={symbol}>\n                <p>\n                  {symbol}: {stockInfo.num_stocks} stocks at $\n                  {stockInfo.last_close}\n                </p>\n                <button onClick={() => handleStockSelection(symbol)}>\n                  Select\n                </button>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : (\n        <p>Loading portfolio...</p>\n      )}\n      {selectedStock && (\n        <div>\n          <h3>Selected Stock: {selectedStock}</h3>\n          <button onClick={() => handleIntervalChange(\"weekly\")}>Weekly</button>\n          <button onClick={() => handleIntervalChange(\"monthly\")}>\n            Monthly\n          </button>\n          {/* Add more interval buttons */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}