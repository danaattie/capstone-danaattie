{"ast":null,"code":"var _jsxFileName = \"/Users/danaattie/Capstone/FRONTEND/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [portfolio, setPortfolio] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  // const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n  const url = `http://127.0.0.1:5001`;\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(`${url}/api/portfolio`).then(response => response.json()).then(data => {\n        console.log(\"Fetched portfolio data:\", data);\n        setList(data); // Update the state with the fetched data\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n        // If there's an error, i set some error state and display it\n      });\n    }\n    fetchData();\n  }, []);\n  console.log(\"got data\");\n  const [stockDetails, setStockDetails] = useState(null);\n\n  //...\n\n  const fetchStockDetails = async stockSymbol => {\n    try {\n      const response = await fetch(`${url}/portfolio/${stockSymbol}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const details = await response.json();\n      setStockDetails(details);\n    } catch (error) {\n      console.error(\"Error fetching stock details:\", error);\n    }\n  };\n\n  // Function to handle when a stock is selected\n  const handleStockSelection = stockSymbol => {\n    setSelectedStock(stockSymbol);\n  };\n\n  // Function to handle interval change\n  const handleIntervalChange = newInterval => {\n    setSelectedInterval(newInterval);\n  };\n  const fetchPortfolio = async () => {\n    //fetches the user's portfolio dictionary.\n    try {\n      const response = await fetch(`${url}/${userId}/portfolio`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const portfolio = await response.json();\n      setPortfolio(portfolio);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n  const fetchPortfolioTotal = async () => {\n    //fetches the total value of the user's portfolio.\n    try {\n      const response = await fetch(`${url}/${userId}/portfolio/total`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const total = await response.json();\n      setTotal(total);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), list ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Portfolio Value: $\", list.total_value_of_portfolio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(list.portfolio).map(([symbol, stockInfo]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [symbol, \": \", stockInfo.num_stocks, \" stocks at $\", stockInfo.last_close]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleStockSelection(symbol),\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading portfolio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), selectedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Stock: \", selectedStock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIntervalChange(\"weekly\"),\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleIntervalChange(\"monthly\"),\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x/eKJSwQcUiMs8bK7D3flNQ8SNo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","portfolio","setPortfolio","total","setTotal","error","setError","list","setList","selectedStock","setSelectedStock","selectedInterval","setSelectedInterval","userId","url","fetchData","fetch","then","response","json","data","console","log","catch","stockDetails","setStockDetails","fetchStockDetails","stockSymbol","ok","Error","status","details","handleStockSelection","handleIntervalChange","newInterval","fetchPortfolio","fetchPortfolioTotal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total_value_of_portfolio","Object","entries","map","symbol","stockInfo","num_stocks","last_close","onClick","_c","$RefreshReg$"],"sources":["/Users/danaattie/Capstone/FRONTEND/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [portfolio, setPortfolio] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [selectedInterval, setSelectedInterval] = useState(\"daily\");\n  const userId = \"user1\";\n  // const url = `https://mcsbt-integration-416418.ew.r.appspot.com`;\n  const url = `http://127.0.0.1:5001`;\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(`${url}/api/portfolio`)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Fetched portfolio data:\", data);\n          setList(data); // Update the state with the fetched data\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n          // If there's an error, i set some error state and display it\n        });\n    }\n    fetchData();\n  }, []);\n  console.log(\"got data\");\n  const [stockDetails, setStockDetails] = useState(null);\n\n  //...\n\n  const fetchStockDetails = async (stockSymbol) => {\n    try {\n      const response = await fetch(`${url}/portfolio/${stockSymbol}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const details = await response.json();\n      setStockDetails(details);\n    } catch (error) {\n      console.error(\"Error fetching stock details:\", error);\n    }\n  };\n\n  // Function to handle when a stock is selected\n  const handleStockSelection = (stockSymbol) => {\n    setSelectedStock(stockSymbol);\n  };\n\n  // Function to handle interval change\n  const handleIntervalChange = (newInterval) => {\n    setSelectedInterval(newInterval);\n  };\n\n  const fetchPortfolio = async () => {\n    //fetches the user's portfolio dictionary.\n    try {\n      const response = await fetch(`${url}/${userId}/portfolio`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const portfolio = await response.json();\n      setPortfolio(portfolio);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n\n  const fetchPortfolioTotal = async () => {\n    //fetches the total value of the user's portfolio.\n    try {\n      const response = await fetch(`${url}/${userId}/portfolio/total`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const total = await response.json();\n      setTotal(total);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      setError(\"Failed to load data.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome, {userId}</h1>\n      {list ? (\n        <>\n          <h2>Total Portfolio Value: ${list.total_value_of_portfolio}</h2>\n          <div>\n            {Object.entries(list.portfolio).map(([symbol, stockInfo]) => (\n              <div key={symbol}>\n                <p>\n                  {symbol}: {stockInfo.num_stocks} stocks at $\n                  {stockInfo.last_close}\n                </p>\n                <button onClick={() => handleStockSelection(symbol)}>\n                  Select\n                </button>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : (\n        <p>Loading portfolio...</p>\n      )}\n      {selectedStock && (\n        <div>\n          <h3>Selected Stock: {selectedStock}</h3>\n          <button onClick={() => handleIntervalChange(\"weekly\")}>Weekly</button>\n          <button onClick={() => handleIntervalChange(\"monthly\")}>\n            Monthly\n          </button>\n          {/* Add more interval buttons */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}